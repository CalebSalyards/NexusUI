include:
  - compose-authentik.yaml

services:
  headscale:
    image: headscale/headscale:stable
    container_name: headscale
    # user: "1002:1002"
    volumes:
        - /data/nexus/headscale/config:/etc/headscale/
        - /data/nexus/headscale/keys:/var/lib/headscale/
    ports:
        - 8080:8080
        - 9090:9090
        - 50443:50443
    command: serve
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.headscale.rule=Host(`tailscale.itm-nex.us`) && PathPrefix(`/`)"
      - "traefik.http.routers.headscale.entrypoints=websecure"
      - "traefik.http.services.headscale.loadbalancer.server.port=8080"
      # Optional part for file upload max sizes
      - "traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=50000000" # optional, only necessary for enabled file uploads
      - "traefik.http.middlewares.limit.buffering.maxResponseBodyBytes=50000000" # optional, only necessary for enabled file uploads
      - "traefik.http.middlewares.limit.buffering.memRequestBodyBytes=50000000" # optional, only necessary for enabled file uploads
      - "traefik.http.middlewares.limit.buffering.memResponseBodyBytes=50000000" # optional, only necessary for enabled file uploads

  headscale-ui:
    image: ghcr.io/gurucomputing/headscale-ui:latest
    pull_policy: always
    container_name: headscale-ui
    restart: unless-stopped
    ports:
        - 9999:8080
    labels:
      - traefik.enable=true
      - traefik.http.routers.headscale-ui-rtr.rule=Host(`headscale.itm-nex.us`) && PathPrefix(`/web`)
      - traefik.http.services.headscale-ui-svc.loadbalancer.server.port=80
      # Optional part for traefik middlewares; protect the headscale ui interface; access from local lan only
      # - traefik.http.routers.headscale-ui-rtr.middlewares=local-ipwhitelist@file
      # Optional part for file upload max sizes
      - traefik.http.middlewares.limit.buffering.maxRequestBodyBytes=50000000 # optional, only necessary for enabled file uploads
      - traefik.http.middlewares.limit.buffering.maxResponseBodyBytes=50000000 # optional, only necessary for enabled file uploads
      - traefik.http.middlewares.limit.buffering.memRequestBodyBytes=50000000 # optional, only necessary for enabled file uploads
      - traefik.http.middlewares.limit.buffering.memResponseBodyBytes=50000000 # optional, only necessary for enabled file uploads

  traefik:
    image: traefik:3.1
    container_name: traefik
    restart: unless-stopped
    # command:
    #   - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
    #   - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    #   - "--certificatesresolvers.myresolver.acme.email=sal18014@byui.edu"
    #   - "--certificatesresolvers.myresolver.acme.storage=/acme.json"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml:ro
      - /data/nexus/traefik/acme.json:/acme.json
      # - ./config.yml:/config.yml:ro
    # secrets:
    #   - cf_cert_api
    env_file: traefik.env
    ports:
      - 0.0.0.0:80:80
      - 0.0.0.0:443:443
    environment:
      TRAEFIK_DASHBOARD_CREDENTIALS: ${TRAEFIK_DASHBOARD_CREDENTIALS}
    healthcheck:
      # Run traefik healthcheck command
      # https://doc.traefik.io/traefik/operations/cli/#healthcheck
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - proxy
    labels:
      # Dashboard
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.rule=Host(`traefik.itm-nex.us`)"
      - "traefik.http.routers.traefik.service=api@internal"
      # - "traefik.http.routers.traefik.middlewares=authentik@docker"
      # Certificate management
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=lets_encrypt_resolver"
      - "traefik.http.routers.traefik.tls.domains[0].main=itm-nex.us"
      - "traefik.http.routers.traefik.tls.domains[0].sans=traefik.itm-nex.us,tailscale.itm-nex.us,admin.itm-nex.us,auth.itm-nex.us,headscale.itm-nex.us"

networks:
  proxy:
    name: proxy